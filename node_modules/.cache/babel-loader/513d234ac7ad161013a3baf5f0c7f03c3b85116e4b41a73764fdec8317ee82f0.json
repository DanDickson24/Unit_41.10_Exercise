{"ast":null,"code":"var _jsxFileName = \"/home/dan/SchoolWork/Unit_41.10/exercise/src/PlayingCardList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport { useAxios, useLocalStorage } from \"./hooks\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatPlayingCard(data) {\n  // Extract only the information needed for playing cards\n  const {\n    image\n  } = data.cards[0];\n  return {\n    id: data.id,\n    image\n  };\n}\n\n// function CardTable() {\n//   const [cards, addPlayingCard, clearPlayingCards] = useAxios(\n//     \"https://deckofcardsapi.com/api/deck\",\n//     formatPlayingCard\n//   );\n\n//   const addPlayingCardAsync = async () => {\n//     await addPlayingCard(\"/new/draw/\");\n//   };\nfunction CardTable() {\n  _s();\n  const [cards, addCard, clearCards] = useLocalStorage(\"cards\", []);\n  const addPlayingCard = async () => {\n    await addCard(\"https://deckofcardsapi.com/api/deck/new/draw/\");\n  };\n  const handleClearPlayingCards = () => {\n    clearPlayingCards();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayingCardList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pick a card, any card!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPlayingCardAsync,\n        children: \"Add a playing card!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearPlayingCards,\n        children: \"Clear all playing cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PlayingCardList-card-area\",\n      children: cards.map(cardData => /*#__PURE__*/_jsxDEV(PlayingCard, {\n        front: cardData.image\n      }, cardData.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(CardTable, \"fjrttlzL8NTk2b6S0FL0VYSgnp0=\", false, function () {\n  return [useLocalStorage];\n});\n_c = CardTable;\nexport default CardTable;\nvar _c;\n$RefreshReg$(_c, \"CardTable\");","map":{"version":3,"names":["React","PlayingCard","useAxios","useLocalStorage","jsxDEV","_jsxDEV","formatPlayingCard","data","image","cards","id","CardTable","_s","addCard","clearCards","addPlayingCard","handleClearPlayingCards","clearPlayingCards","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","addPlayingCardAsync","map","cardData","front","_c","$RefreshReg$"],"sources":["/home/dan/SchoolWork/Unit_41.10/exercise/src/PlayingCardList.js"],"sourcesContent":["import React from \"react\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport { useAxios, useLocalStorage } from \"./hooks\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nfunction formatPlayingCard(data) {\n  // Extract only the information needed for playing cards\n  const { image } = data.cards[0];\n  return { id: data.id, image };\n}\n\n// function CardTable() {\n//   const [cards, addPlayingCard, clearPlayingCards] = useAxios(\n//     \"https://deckofcardsapi.com/api/deck\",\n//     formatPlayingCard\n//   );\n\n//   const addPlayingCardAsync = async () => {\n//     await addPlayingCard(\"/new/draw/\");\n//   };\nfunction CardTable() {\n\n  const [cards, addCard, clearCards] = useLocalStorage(\"cards\", []);\n\n  const addPlayingCard = async () => {\n    await addCard(\"https://deckofcardsapi.com/api/deck/new/draw/\");\n  };\n\n  const handleClearPlayingCards = () => {\n    clearPlayingCards();\n  };\n\n  return (\n    <div className=\"PlayingCardList\">\n      <h3>Pick a card, any card!</h3>\n      <div>\n        <button onClick={addPlayingCardAsync}>Add a playing card!</button>\n        <button onClick={handleClearPlayingCards}>\n          Clear all playing cards\n        </button>\n      </div>\n      <div className=\"PlayingCardList-card-area\">\n        {cards.map((cardData) => (\n          <PlayingCard key={cardData.id} front={cardData.image} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\n\nexport default CardTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,uBAAuB;AAC9B,SAASC,QAAQ,EAAEC,eAAe,QAAQ,SAAS;;AAEnD;AACA;AADA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,iBAAiBA,CAACC,IAAI,EAAE;EAC/B;EACA,MAAM;IAAEC;EAAM,CAAC,GAAGD,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;EAC/B,OAAO;IAAEC,EAAE,EAAEH,IAAI,CAACG,EAAE;IAAEF;EAAM,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAASG,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEnB,MAAM,CAACH,KAAK,EAAEI,OAAO,EAAEC,UAAU,CAAC,GAAGX,eAAe,CAAC,OAAO,EAAE,EAAE,CAAC;EAEjE,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMF,OAAO,CAAC,+CAA+C,CAAC;EAChE,CAAC;EAED,MAAMG,uBAAuB,GAAGA,CAAA,KAAM;IACpCC,iBAAiB,CAAC,CAAC;EACrB,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bd,OAAA;MAAAc,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BlB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAQmB,OAAO,EAAEC,mBAAoB;QAAAN,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClElB,OAAA;QAAQmB,OAAO,EAAER,uBAAwB;QAAAG,QAAA,EAAC;MAE1C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNlB,OAAA;MAAKa,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EACvCV,KAAK,CAACiB,GAAG,CAAEC,QAAQ,iBAClBtB,OAAA,CAACJ,WAAW;QAAmB2B,KAAK,EAAED,QAAQ,CAACnB;MAAM,GAAnCmB,QAAQ,CAACjB,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0B,CACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CA5BQD,SAAS;EAAA,QAEqBR,eAAe;AAAA;AAAA0B,EAAA,GAF7ClB,SAAS;AA+BlB,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}