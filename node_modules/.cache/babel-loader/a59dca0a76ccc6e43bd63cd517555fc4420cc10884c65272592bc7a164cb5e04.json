{"ast":null,"code":"var _jsxFileName = \"/home/dan/SchoolWork/Unit_41.10/exercise/src/PlayingCardList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport { useAxios } from \"./hooks\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardTable() {\n  _s();\n  const [cards, addPlayingCard, clearPlayingCards] = useAxios(\"https://deckofcardsapi.com/api/deck\");\n  const addPlayingCardAsync = async () => {\n    await addPlayingCard(\"/new/draw/\");\n  };\n  const handleClearPlayingCards = () => {\n    clearPlayingCards();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayingCardList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pick a card, any card!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPlayingCardAsync,\n        children: \"Add a playing card!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearPlayingCards,\n        children: \"Clear all playing cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PlayingCardList-card-area\",\n      children: cards.map((cardData, index) => /*#__PURE__*/_jsxDEV(PlayingCard, {\n        front: cardData.cards[0].image\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(CardTable, \"GctQBgcarjf+dF9bzOKw7NdTBhs=\", false, function () {\n  return [useAxios];\n});\n_c = CardTable;\nexport default CardTable;\nvar _c;\n$RefreshReg$(_c, \"CardTable\");","map":{"version":3,"names":["React","PlayingCard","useAxios","jsxDEV","_jsxDEV","CardTable","_s","cards","addPlayingCard","clearPlayingCards","addPlayingCardAsync","handleClearPlayingCards","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","cardData","index","front","image","_c","$RefreshReg$"],"sources":["/home/dan/SchoolWork/Unit_41.10/exercise/src/PlayingCardList.js"],"sourcesContent":["import React from \"react\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport { useAxios } from \"./hooks\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nfunction CardTable() {\n  const [cards, addPlayingCard, clearPlayingCards] = useAxios(\n    \"https://deckofcardsapi.com/api/deck\"\n  );\n\n  const addPlayingCardAsync = async () => {\n    await addPlayingCard(\"/new/draw/\");\n  };\n\n  const handleClearPlayingCards = () => {\n    clearPlayingCards();\n  };\n\n\n  return (\n    <div className=\"PlayingCardList\">\n      <h3>Pick a card, any card!</h3>\n      <div>\n        <button onClick={addPlayingCardAsync}>Add a playing card!</button>\n        <button onClick={handleClearPlayingCards}>\n          Clear all playing cards\n        </button>\n      </div>\n      <div className=\"PlayingCardList-card-area\">\n        {cards.map((cardData, index) => (\n          <PlayingCard key={index} front={cardData.cards[0].image} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CardTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,uBAAuB;AAC9B,SAASC,QAAQ,QAAQ,SAAS;;AAElC;AACA;AADA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CACzD,qCACF,CAAC;EAED,MAAMQ,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,MAAMF,cAAc,CAAC,YAAY,CAAC;EACpC,CAAC;EAED,MAAMG,uBAAuB,GAAGA,CAAA,KAAM;IACpCF,iBAAiB,CAAC,CAAC;EACrB,CAAC;EAGD,oBACEL,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BT,OAAA;MAAAS,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/Bb,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAQc,OAAO,EAAER,mBAAoB;QAAAG,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClEb,OAAA;QAAQc,OAAO,EAAEP,uBAAwB;QAAAE,QAAA,EAAC;MAE1C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNb,OAAA;MAAKQ,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EACvCN,KAAK,CAACY,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBACzBjB,OAAA,CAACH,WAAW;QAAaqB,KAAK,EAAEF,QAAQ,CAACb,KAAK,CAAC,CAAC,CAAC,CAACgB;MAAM,GAAtCF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CA9BQD,SAAS;EAAA,QACmCH,QAAQ;AAAA;AAAAsB,EAAA,GADpDnB,SAAS;AAgClB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}