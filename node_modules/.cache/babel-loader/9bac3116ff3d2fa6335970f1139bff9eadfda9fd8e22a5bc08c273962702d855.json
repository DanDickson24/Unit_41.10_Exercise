{"ast":null,"code":"var _jsxFileName = \"/home/dan/SchoolWork/Unit_41.10/exercise/src/PokeDex.js\",\n  _s = $RefreshSig$();\nimport { v4 as uuidv4 } from \"uuid\";\nimport PokemonSelect from \"./PokemonSelect\";\nimport PokemonCard from \"./PokemonCard\";\nimport \"./PokeDex.css\";\nimport { useAxios } from \"./hooks\";\n\n/* Renders a list of pokemon cards.\n * Can also add a new card at random,\n * or from a dropdown of available pokemon. */\n// function PokeDex() {\n//   const [pokemon, setPokemon] = useState([]);\n//   const addPokemon = async name => {\n//     const response = await axios.get(\n//       `https://pokeapi.co/api/v2/pokemon/${name}/`\n//     );\n//     setPokemon(pokemon => [...pokemon, { ...response.data, id: uuidv4 }]);\n//   };\n//   return (\n//     <div className=\"PokeDex\">\n//       <div className=\"PokeDex-buttons\">\n//         <h3>Please select your pokemon:</h3>\n//         <PokemonSelect add={addPokemon} />\n//       </div>\n//       <div className=\"PokeDex-card-area\">\n//         {pokemon.map(cardData => (\n//           <PokemonCard\n//             key={cardData.id}\n//             front={cardData.sprites.front_default}\n//             back={cardData.sprites.back_default}\n//             name={cardData.name}\n//             stats={cardData.stats.map(stat => ({\n//               value: stat.base_stat,\n//               name: stat.stat.name\n//             }))}\n//           />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default PokeDex;\n\n// function PokeDex() {\n//   const [pokemon, addPokemon, clearPokemon] = useAxios(\n//     \"https://pokeapi.co/api/v2/pokemon\"\n//   );\n\n//   const fetchPokemonData = async (name) => {\n//     await addPokemon(`/${name}/`);\n//   };\n\n//   const handleClearPokemon = () => {\n//     clearPokemon();\n//   };\n\n//   return (\n//     <div className=\"PokeDex\">\n//       <div className=\"PokeDex-buttons\">\n//         <h3>Please select your pokemon:</h3>\n//         <PokemonSelect add={fetchPokemonData} />\n//         <button onClick={handleClearPokemon}>Clear all Pokemon cards</button>\n//       </div>\n//       <div className=\"PokeDex-card-area\">\n//         {pokemon.map((cardData) => (\n//           <PokemonCard\n//             key={uuidv4()}\n//             front={cardData.sprites.front_default}\n//             back={cardData.sprites.back_default}\n//             name={cardData.name}\n//             stats={cardData.stats.map((stat) => ({\n//               value: stat.base_stat,\n//               name: stat.stat.name,\n//             }))}\n//           />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default PokeDex;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatPokemon(data) {\n  // Extract only the information needed for Pokemon cards\n  const {\n    id,\n    sprites,\n    name,\n    stats\n  } = data;\n  const front = sprites.front_default;\n  const back = sprites.back_default;\n\n  // Extract stats data with name and value\n  const formattedStats = stats.map(stat => ({\n    name: stat.stat.name,\n    value: stat.base_stat\n  }));\n  return {\n    id,\n    front,\n    back,\n    name,\n    stats: formattedStats\n  };\n}\nfunction PokeDex() {\n  _s();\n  const [pokemon, addPokemon, clearPokemon] = useAxios(\"https://pokeapi.co/api/v2/pokemon\", formatPokemon);\n  const fetchPokemonData = async name => {\n    await addPokemon(`/${name}/`);\n  };\n  const handleClearPokemon = () => {\n    clearPokemon();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PokeDex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PokeDex-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please select your Pokemon:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PokemonSelect, {\n        add: fetchPokemonData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearPokemon,\n        children: \"Clear all Pokemon cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PokeDex-card-area\",\n      children: pokemon.map(cardData => /*#__PURE__*/_jsxDEV(PokemonCard, {\n        front: cardData.front,\n        back: cardData.back,\n        name: cardData.name,\n        stats: cardData.stats\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(PokeDex, \"rLbgiRp4OT6zeyCZYp+fhBpZn9Q=\", false, function () {\n  return [useAxios];\n});\n_c = PokeDex;\nexport default PokeDex;\nvar _c;\n$RefreshReg$(_c, \"PokeDex\");","map":{"version":3,"names":["v4","uuidv4","PokemonSelect","PokemonCard","useAxios","jsxDEV","_jsxDEV","formatPokemon","data","id","sprites","name","stats","front","front_default","back","back_default","formattedStats","map","stat","value","base_stat","PokeDex","_s","pokemon","addPokemon","clearPokemon","fetchPokemonData","handleClearPokemon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","add","onClick","cardData","_c","$RefreshReg$"],"sources":["/home/dan/SchoolWork/Unit_41.10/exercise/src/PokeDex.js"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport PokemonSelect from \"./PokemonSelect\";\nimport PokemonCard from \"./PokemonCard\";\nimport \"./PokeDex.css\";\nimport { useAxios } from \"./hooks\";\n\n/* Renders a list of pokemon cards.\n * Can also add a new card at random,\n * or from a dropdown of available pokemon. */\n// function PokeDex() {\n//   const [pokemon, setPokemon] = useState([]);\n//   const addPokemon = async name => {\n//     const response = await axios.get(\n//       `https://pokeapi.co/api/v2/pokemon/${name}/`\n//     );\n//     setPokemon(pokemon => [...pokemon, { ...response.data, id: uuidv4 }]);\n//   };\n//   return (\n//     <div className=\"PokeDex\">\n//       <div className=\"PokeDex-buttons\">\n//         <h3>Please select your pokemon:</h3>\n//         <PokemonSelect add={addPokemon} />\n//       </div>\n//       <div className=\"PokeDex-card-area\">\n//         {pokemon.map(cardData => (\n//           <PokemonCard\n//             key={cardData.id}\n//             front={cardData.sprites.front_default}\n//             back={cardData.sprites.back_default}\n//             name={cardData.name}\n//             stats={cardData.stats.map(stat => ({\n//               value: stat.base_stat,\n//               name: stat.stat.name\n//             }))}\n//           />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default PokeDex;\n\n\n// function PokeDex() {\n//   const [pokemon, addPokemon, clearPokemon] = useAxios(\n//     \"https://pokeapi.co/api/v2/pokemon\"\n//   );\n\n//   const fetchPokemonData = async (name) => {\n//     await addPokemon(`/${name}/`);\n//   };\n\n//   const handleClearPokemon = () => {\n//     clearPokemon();\n//   };\n\n//   return (\n//     <div className=\"PokeDex\">\n//       <div className=\"PokeDex-buttons\">\n//         <h3>Please select your pokemon:</h3>\n//         <PokemonSelect add={fetchPokemonData} />\n//         <button onClick={handleClearPokemon}>Clear all Pokemon cards</button>\n//       </div>\n//       <div className=\"PokeDex-card-area\">\n//         {pokemon.map((cardData) => (\n//           <PokemonCard\n//             key={uuidv4()}\n//             front={cardData.sprites.front_default}\n//             back={cardData.sprites.back_default}\n//             name={cardData.name}\n//             stats={cardData.stats.map((stat) => ({\n//               value: stat.base_stat,\n//               name: stat.stat.name,\n//             }))}\n//           />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default PokeDex;\n\nfunction formatPokemon(data) {\n  // Extract only the information needed for Pokemon cards\n  const { id, sprites, name, stats } = data;\n  const front = sprites.front_default;\n  const back = sprites.back_default;\n\n  // Extract stats data with name and value\n  const formattedStats = stats.map((stat) => ({\n    name: stat.stat.name,\n    value: stat.base_stat,\n  }));\n\n  return { id, front, back, name, stats: formattedStats };\n}\n\nfunction PokeDex() {\n  const [pokemon, addPokemon, clearPokemon] = useAxios(\n    \"https://pokeapi.co/api/v2/pokemon\",\n    formatPokemon\n  );\n\n  const fetchPokemonData = async (name) => {\n    await addPokemon(`/${name}/`);\n  };\n\n  const handleClearPokemon = () => {\n    clearPokemon();\n  };\n\n  return (\n    <div className=\"PokeDex\">\n      <div className=\"PokeDex-buttons\">\n        <h3>Please select your Pokemon:</h3>\n        <PokemonSelect add={fetchPokemonData} />\n        <button onClick={handleClearPokemon}>Clear all Pokemon cards</button>\n      </div>\n      <div className=\"PokeDex-card-area\">\n        {pokemon.map((cardData) => (\n          <PokemonCard\n            key={uuidv4()}\n            front={cardData.front}\n            back={cardData.back}\n            name={cardData.name}\n            stats={cardData.stats}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PokeDex;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}